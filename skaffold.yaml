apiVersion: skaffold/v4beta11
kind: Config
build:
  artifacts:
  - image: accountingservice
    context: .
    docker:
      dockerfile: src/accountingservice/Dockerfile
  - image: adservice
    context: .
    docker:
      dockerfile: src/adservice/Dockerfile
  - image: cartservice
    context: .
    docker:
      dockerfile: src/cartservice/src/Dockerfile
  - image: checkoutservice
    context: .
    docker:
      dockerfile: src/checkoutservice/Dockerfile
  - image: currencyservice
    context: .
    docker:
      dockerfile: src/currencyservice/Dockerfile
  - image: emailservice
    context: .
    docker:
      dockerfile: src/emailservice/Dockerfile
  - image: frauddetectionservice
    context: .
    docker:
      dockerfile: src/frauddetectionservice/Dockerfile
  - image: frontend
    context: .
    docker:
      dockerfile: src/frontend/Dockerfile
  - image: frontendproxy
    context: .
    docker:
      dockerfile: src/frontendproxy/Dockerfile
  - image: imageprovider
    context: .
    docker:
      dockerfile: src/imageprovider/Dockerfile
  - image: kafka
    context: .
    docker:
      dockerfile: src/kafka/Dockerfile
  - image: loadgenerator
    context: .
    docker:
      dockerfile: src/loadgenerator/Dockerfile
  - image: paymentservice
    context: .
    docker:
      dockerfile: src/paymentservice/Dockerfile
  - image: productcatalogservice
    context: .
    docker:
      dockerfile: src/productcatalogservice/Dockerfile
  - image: quoteservice
    context: .
    docker:
      dockerfile: src/quoteservice/Dockerfile
  - image: recommendationservice
    context: .
    docker:
      dockerfile: src/recommendationservice/Dockerfile
  - image: shippingservice
    context: .
    docker:
      dockerfile: src/shippingservice/Dockerfile
  platforms:
    - linux/amd64
  local:
    useDockerCLI: true
deploy:
  helm:
    releases:
      - name: "{{.USER}}"
        createNamespace: true
        namespace: "{{.USER}}-local"
        repo: https://open-telemetry.github.io/opentelemetry-helm-charts
        remoteChart: opentelemetry-demo
        recreatePods: false
        skipBuildDependencies: false
        valuesFiles:
          - deploy/config-files/demo/values.yaml
          - skaffold-config/demo-values.yaml
        setValues:
          default:
            image:
              pullPolicy: IfNotPresent
          opentelemetry-collector:
            extraEnvs:
              - name: HONEYCOMB_API_KEY
        setValueTemplates:
          opentelemetry-collector.extraEnvs[0].value: "{{.HONEYCOMB_API_KEY}}"
          components.accountingService.imageOverride.repository: "{{if .IMAGE_REPO_accountingservice }}{{.IMAGE_REPO_accountingservice}}{{end}}"
          components.accountingService.imageOverride.tag:  "{{if .IMAGE_REPO_accountingservice }}{{.IMAGE_TAG_accountingservice}}@{{.IMAGE_DIGEST_accountingservice}}{{end}}"
          components.adService.imageOverride.repository: "{{if .IMAGE_REPO_adservice }}{{.IMAGE_REPO_adservice}}{{end}}"
          components.adService.imageOverride.tag:  "{{if .IMAGE_REPO_adservice }}{{.IMAGE_TAG_adservice}}@{{.IMAGE_DIGEST_adservice}}{{end}}"
          components.cartService.imageOverride.repository: "{{if .IMAGE_REPO_cartservice }}{{.IMAGE_REPO_cartservice}}{{end}}"
          components.cartService.imageOverride.tag:  "{{if .IMAGE_REPO_cartservice }}{{.IMAGE_TAG_cartservice}}@{{.IMAGE_DIGEST_cartservice}}{{end}}"
          components.checkoutService.imageOverride.repository: "{{if .IMAGE_REPO_checkoutservice }}{{.IMAGE_REPO_checkoutservice}}{{end}}"
          components.checkoutService.imageOverride.tag:  "{{if .IMAGE_REPO_checkoutservice }}{{.IMAGE_TAG_checkoutservice}}@{{.IMAGE_DIGEST_checkoutservice}}{{end}}"
          components.currencyService.imageOverride.repository: "{{if .IMAGE_REPO_currencyservice }}{{.IMAGE_REPO_currencyservice}}{{end}}"
          components.currencyService.imageOverride.tag:  "{{if .IMAGE_REPO_currencyservice }}{{.IMAGE_TAG_currencyservice}}@{{.IMAGE_DIGEST_currencyservice}}{{end}}"
          components.emailService.imageOverride.repository: "{{if .IMAGE_REPO_emailservice }}{{.IMAGE_REPO_emailservice}}{{end}}"
          components.emailService.imageOverride.tag:  "{{if .IMAGE_REPO_emailservice }}{{.IMAGE_TAG_emailservice}}@{{.IMAGE_DIGEST_emailservice}}{{end}}"
          components.frauddetectionService.imageOverride.repository: "{{if .IMAGE_REPO_frauddetectionservice }}{{.IMAGE_REPO_frauddetectionservice}}{{end}}"
          components.frauddetectionService.imageOverride.tag:  "{{if .IMAGE_REPO_frauddetectionservice }}{{.IMAGE_TAG_frauddetectionservice}}@{{.IMAGE_DIGEST_frauddetectionservice}}{{end}}"
          components.frontend.imageOverride.repository: "{{if .IMAGE_REPO_frontend }}{{.IMAGE_REPO_frontend}}{{end}}"
          components.frontend.imageOverride.tag:  "{{if .IMAGE_REPO_frontend }}{{.IMAGE_TAG_frontend}}@{{.IMAGE_DIGEST_frontend}}{{end}}"
          components.frontendProxy.imageOverride.repository: "{{if .IMAGE_REPO_frontendproxy }}{{.IMAGE_REPO_frontendproxy}}{{end}}"
          components.frontendProxy.imageOverride.tag:  "{{if .IMAGE_REPO_frontendproxy }}{{.IMAGE_TAG_frontendproxy}}@{{.IMAGE_DIGEST_frontendproxy}}{{end}}"
          components.imageprovider.imageOverride.repository: "{{if .IMAGE_REPO_imageprovider }}{{.IMAGE_REPO_imageprovider}}{{end}}"
          components.imageprovider.imageOverride.tag:  "{{if .IMAGE_REPO_imageprovider }}{{.IMAGE_TAG_imageprovider}}@{{.IMAGE_DIGEST_imageprovider}}{{end}}"
          components.kafka.imageOverride.repository: "{{if .IMAGE_REPO_kafka }}{{.IMAGE_REPO_kafka}}{{end}}"
          components.kafka.imageOverride.tag:  "{{if .IMAGE_REPO_kafka }}{{.IMAGE_TAG_kafka}}@{{.IMAGE_DIGEST_kafka}}{{end}}"
          components.loadgenerator.imageOverride.repository: "{{if .IMAGE_REPO_loadgenerator }}{{.IMAGE_REPO_loadgenerator}}{{end}}"
          components.loadgenerator.imageOverride.tag:  "{{if .IMAGE_REPO_loadgenerator }}{{.IMAGE_TAG_loadgenerator}}@{{.IMAGE_DIGEST_loadgenerator}}{{end}}"
          components.paymentService.imageOverride.repository: "{{if .IMAGE_REPO_paymentservice }}{{.IMAGE_REPO_paymentservice}}{{end}}"
          components.paymentService.imageOverride.tag:  "{{if .IMAGE_REPO_paymentservice }}{{.IMAGE_TAG_paymentservice}}@{{.IMAGE_DIGEST_paymentservice}}{{end}}"
          components.productCatalogService.imageOverride.repository: "{{if .IMAGE_REPO_productcatalogservice }}{{.IMAGE_REPO_productcatalogservice}}{{end}}"
          components.productCatalogService.imageOverride.tag:  "{{if .IMAGE_REPO_productcatalogservice }}{{.IMAGE_TAG_productcatalogservice}}@{{.IMAGE_DIGEST_productcatalogservice}}{{end}}"
          components.quoteService.imageOverride.repository: "{{if .IMAGE_REPO_quoteservice }}{{.IMAGE_REPO_quoteservice}}{{end}}"
          components.quoteService.imageOverride.tag:  "{{if .IMAGE_REPO_quoteservice }}{{.IMAGE_TAG_quoteservice}}@{{.IMAGE_DIGEST_quoteservice}}{{end}}"
          components.recommendationService.imageOverride.repository: "{{if .IMAGE_REPO_recommendationservice }}{{.IMAGE_REPO_recommendationservice}}{{end}}"
          components.recommendationService.imageOverride.tag:  "{{if .IMAGE_REPO_recommendationservice }}{{.IMAGE_TAG_recommendationservice}}@{{.IMAGE_DIGEST_recommendationservice}}{{end}}"
          components.shippingService.imageOverride.repository: "{{if .IMAGE_REPO_shippingservice }}{{.IMAGE_REPO_shippingservice}}{{end}}"
          components.shippingService.imageOverride.tag:  "{{if .IMAGE_REPO_shippingservice }}{{.IMAGE_TAG_shippingservice}}@{{.IMAGE_DIGEST_shippingservice}}{{end}}"
        upgradeOnChange: true
        useHelmSecrets: false
        wait: true